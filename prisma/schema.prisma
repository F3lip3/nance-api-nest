// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  REMOVED
}

enum TradeType {
  BUY
  SELL
}

enum UserRole {
  ADMIN
  COMMON
}

model Holding {
  id                  Int                       @id @default(autoincrement())
  portfolio           Portfolio                 @relation(fields: [portfolio_id], references: [id])
  portfolio_id        Int
  symbol              Symbol                    @relation(fields: [symbol_id], references: [id])
  symbol_id           Int
  lots                Int
  shares              Int
  average_cost        Decimal
}

model Portfolio {
  id                  Int                       @id @default(autoincrement())
  name                String                    @db.VarChar(200)
  currency            String                    @db.VarChar(50)
  status              Status                    @default(ACTIVE)
  user                User                      @relation(fields: [user_id], references: [id])
  user_id             Int
  holdings            Holding[]
  trades              Trade[]
  created_at          DateTime                  @default(now())
  updated_at          DateTime                  @updatedAt
  removed_at          DateTime?
}

model Symbol {
  id                  Int                       @id @default(autoincrement())
  code                String                    @db.VarChar(100) @unique
  name                String                    @db.VarChar(500)
  status              Status                    @default(ACTIVE)
  historical_prices   SymbolHistoricalPrice[]
  category            SymbolCategory            @relation(fields: [category_id], references: [id])
  category_id         Int
  holdings            Holding[]
  trades              Trade[]
  created_at          DateTime                  @default(now())
  updated_at          DateTime                  @updatedAt
  removed_at          DateTime?
}

model SymbolCategory {
  id                  Int                       @id @default(autoincrement())
  name                String                    @db.VarChar(200) @unique
  status              Status                    @default(ACTIVE)
  symbols             Symbol[]
  created_at          DateTime                  @default(now())
  updated_at          DateTime                  @updatedAt
  removed_at          DateTime?
}

model SymbolHistoricalPrice {
  id                  BigInt                    @id @default(autoincrement())
  symbol              Symbol                    @relation(fields: [symbol_id], references: [id])
  symbol_id           Int
  date                DateTime                  @db.Date
  open                Decimal
  high                Decimal
  close               Decimal
  adjusted_close      Decimal
  volume              BigInt

  @@unique([symbol_id,date])
}

model Trade {
  id                  Int                       @id @default(autoincrement())
  date                DateTime                  @db.Date
  user                User                      @relation(fields: [user_id], references: [id])
  user_id             Int
  portfolio           Portfolio                 @relation(fields: [portfolio_id], references: [id])
  portfolio_id        Int
  symbol              Symbol                    @relation(fields: [symbol_id], references: [id])
  symbol_id           Int
  shares              Decimal
  cost_per_share      Decimal
  type                TradeType
  created_at          DateTime                  @default(now())
}

model User {
  id                  Int                       @id @default(autoincrement())
  email               String                    @db.VarChar(200) @unique
  name                String                    @db.VarChar(200)
  password            String                    @db.VarChar(60)
  status              Status                    @default(ACTIVE)
  role                UserRole                  @default(COMMON)
  portfolios          Portfolio[]
  trades              Trade[]
  created_at          DateTime                  @default(now())
  updated_at          DateTime                  @updatedAt
  removed_at          DateTime?
}
